{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Foam-mkdocs-template","text":"<p>Welcome to Foam-mkdocs-template! #support roamlinks!</p> <ul> <li>How to create this website and share your foam/obsidian notes? See: tutorial</li> <li>foam</li> </ul> <p>Blablabla</p> <p>test</p>"},{"location":"#support-roamlinks","title":"Support roamlinks","text":"origin convert <code>[Git Flow](git_flow.md)</code> <code>[Git Flow](../software/git_flow.md)</code> <code>[[Git Flow]]</code> <code>[Git Flow](../software/git_flow.md)</code> <code>![[image.png]]</code> <code>![image.png](../image/imag.png)</code> <code>[#Heading identifiers](&lt;#heading-identifiers&gt;)</code> <code>[Heading identifiers in HTML](#heading-identifiers-in-html)</code> <code>[[Git Flow#Heading]]</code> <code>[Git Flow](../software/git_flow.md#heading)</code>"},{"location":"js/","title":"Fondamentaux","text":""},{"location":"js/#ex\u00e9cuter-du-javascript","title":"Ex\u00e9cuter du JavaScript","text":"<p>Deux m\u00e9thodes possibles :</p> <ol> <li>Depuis le HTML </li> </ol> <pre><code>&lt;body&gt;\n    &lt;script&gt;\n        // Your JavaScript goes here!\n        console.log(\"Hello, World!\")\n    &lt;/script&gt;\n&lt;/body&gt;\n</code></pre> <ol> <li>Importer depuis un fichier js dans le HTML</li> </ol> <pre><code>&lt;body&gt;\n    &lt;script src=\"javascript.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>"},{"location":"js/#v\u00e9rifier-le-type-dune-variable","title":"V\u00e9rifier le type d\u2019une variable","text":"<pre><code>typeof myint;\n</code></pre>"},{"location":"js/#variable","title":"Variable","text":"<pre><code>let message;\nmessage = 'Hello';\nalert(message); //afficher le contenu de la variable\n\n// On peut aussi directement d\u00e9clar\u00e9 la variable et l'assign\u00e9\nlet message = 'Hello';\n\n//On peut utilise $ et _ comme nom de variable\nlet $ = 1;\nlet _ = 2;\nalert($ + _); //3\n</code></pre>"},{"location":"js/#constante","title":"Constante","text":"<pre><code>// Il vaut mieux nommer les constante non calcul\u00e9 durant le runtime en majuscule\nconst AGE = 10;\nconst COLOR_RED = \"#F00\";\n\n// QUand on a besoin de choisir une couleur\nlet color = COLOR_RED\nalert(color); // #FF7F00\n</code></pre>"},{"location":"js/#nombres","title":"Nombres","text":"<pre><code>// Javascript utilise l'operateur + pour addition\u00e9 ou concat\u00e9ner\nz = \"ab\" + \"bc\";\n\n// Javascript essaie de convertir les strings en nom, cela ne fonctionne pas pour l'op\u00e9rateur +\nz = \"30\" \\ 5; //6\n\nz = \"30\" + 30; //3030\n\n// Si une op\u00e9ration \u00e9choue, le r\u00e9sultat est NaN (Not a Number)\nz = 100 / \"Apple\"; //z = NaN\n\n// On peut v\u00e9rigier si le resultat est NaN avec la fonction \n// isNaN()\n\nisNaN(x);\n\n// Infinity ou -Infinity est retourn\u00e9 si le nombre est en\n// dehors du nombre le plus large possible\n\nlet myNumber = 2;\n// Execute until Infinity\nwhile (myNumber != Infinity) {\n  myNumber = myNumber * myNumber;\n}\n\n// Hexadecimal -&gt; Pr\u00e9c\u00e9d\u00e9 par 0x\nlet x = 0xFF;\n\n// On peut afficher les nombres dans une base diff\u00e9rente\n// avec toString()\n\nmyNumber.toString(16); //Affiche le nombre en base16\n\n// Pas recommand\u00e9 : il est possible de cr\u00e9\u00e9 un nombre en tant qu'objet\nlet x = new Number(500);\n</code></pre>"},{"location":"js/#m\u00e9thodes-pour-nombre","title":"M\u00e9thodes pour nombre","text":"<pre><code>// Cast un string en nombre : Number(x)\nlet z = \"30\";\nlet y = Number(z) + 4; // 34\n</code></pre>"},{"location":"js/#op\u00e9rateur--et-","title":"Op\u00e9rateur == et ===","text":"<ul> <li>== : loose equality \u2192 converti les variables afin qu\u2019elles soient du m\u00eame type avant de les comparer. attention : les bool\u00e9en sont convertis en nombre (1 ou 0)</li> <li>=== : strict equality \u2192 compare directement la valeur des variables<ul> <li>! == : not equal to</li> </ul> </li> </ul>"},{"location":"js/#strings","title":"Strings","text":"<p>3 types de strings possible : </p> <ul> <li>\u201c\u201d</li> <li>\u2018\u2019</li> <li>``  -&gt;  appel\u00e9 template literal -&gt; permet d'embed du javascript</li> </ul> <pre><code>// Exemple template lital\nconst name = \"Chris\";\nconst greeting = `Hello, ${name}`\n\n//multiligne \nconst newline = `One day you finally\nknew what had to do, and begin`;\n\nconst newline = \"One day you finally\\nknew what had..\"\n</code></pre> <p>On peut convertir une varible en string avec la fonction String()</p> <pre><code>const myNum2 = 123;\nconst myString2 = String(myuNum2);\n</code></pre>"},{"location":"js/#strings-m\u00e9thodes-importantes","title":"Strings m\u00e9thodes importantes","text":"<pre><code>// Taille d'une strings\nlet text = \"blabla\";\nlet length = text.length; \n\n//Extraire des caract\u00e8res\nlet char = text.at(position); //Permet d'utiliser un index negatif\nlet char = text[2]; //Obtenir le 3eme caractere\nlet char = charAt(position); //Retourne un caract\u00e8re \u00e0 l'index sp\u00e9cifi\u00e9\nlet char = charCodeAt(position) //Retourne le code UTF-16 d'un caract\u00e8re\n\n//Extraire une slice\nlet char = text.slice(start, end); //Si le second parametre est omis, prend du start jusqu'\u00e0 la fin\nlet char = text.substring(start, end); //les arguments n\u00e9gatif sont trait\u00e9 comme 0\nlet char = text.substr(start, length)\n\n//Majuscule et minuscule\nlet char = text.toUpperCase();\nlet char = text.toLowerCase();\n\n//Joindre des strings\nlet text1 = \"Hello\";\nlet text2 = \"World\";\nlet text3 = text1.concat(\" \", text2) //Hello World\n\n// Trim les leading et ending whitespace\nlet text1 = text2.trim(); //trim leading &amp; ending whitespace\nlet text1 = text2.trimStart(); //trim les leading whitespace\nlet text1 = text2.trimEnd();\n\n// Padding -&gt; attention padStart et padEnd sont des strings m\u00e9thod\n// Pour padder un nombre il faut d'abord le convertir\ntest.padStart(4, \"0\"); //Ajoute 4 zero au debut\ntest.padEnd(4,\"0\"); //Ajoute 4 zero \u00e0 la fin\n\n//Repeter une string\nlet text2 = \"Hello\";\nlet text1 = text2.repeat(2); //HelloHello\n\n//Remplacer le contenu (seulement le first match)\nlet text = \"Visit Microsoft\";\nlet text2 = text.replace(\"Microsoft\",\"Apple\"); //Visit Apple\n//flag /i pour enlever la casse\nlet text2 = text.replace(\"/MICROSOFT/i\", \"Apple\");\n//flag /g pour changer tous les matchs\nlet text2 = text.replace(\"/MICROSOFT/g\", \"Apple\");\n//Remplacer tous les match avec la fonction replaceAll()\nlet text2 = text.replaceAll(\"Cat\",\"Dog\");\n//Il faut ajouter le flag /g si on veut untiliser un regex\nlet text2 = text.replaceAll(/Cat/g,\"Dog\");\n\n//Convertir un String en Array avec split()\nstringArray = text1.split(\",\"); //Split \u00e0 la virgule\nstringArray = text1.split(\"\"); //Split tous les caract\u00e8res\nStringArray = text1.split(); //La strings entiere est contenu \u00e0 l'index 0\n</code></pre>"},{"location":"js/#function","title":"Function","text":""},{"location":"js/#function-d\u00e9claration","title":"Function D\u00e9claration","text":"<pre><code>function name(paramter..) {return x;}\n</code></pre>"},{"location":"js/#scope","title":"Scope","text":"<p>Les functions peuvent utilis\u00e9 des variables exterieur seulement si elles n\u2019existent pas localement dans la fonction. mieux vaut minimiser l\u2019utilisation de variable global.</p>"},{"location":"js/#anonyme-function--arrow-function","title":"Anonyme Function &amp; Arrow Function","text":"<pre><code>//Anonymous function : fonction sans nom\n//Souvent utilis\u00e9 lors qu'une function demande une fonction \n//en param\u00e8tre\n(function () { alert(\"hello\"); });\n\n//les fonctions Arrow est une forme alternative des \n// fonction anonyme\ntextBox.addEventListener(\"keydown\", (event) =&gt; { codeblock..;});\n//On peut enlever les parenthese s'il n'y a qu'1 argument\ntextBox.addEventListener(\"keydown\", event =&gt; { codeblock..;});\n//Si elle ne contient qu'une ligne, et que c'est un return\n//alors on peut enlever les accolades\n//Exemple function Arrow qui contient return item * 2\nx = orginals.map(item =&gt; item * 2);\n</code></pre>"},{"location":"js/#param\u00e8tre","title":"Param\u00e8tre","text":"<p>Si une valeur n\u2019est pas pass\u00e9 \u00e0 un param\u00e8tre, alors sa valeur est undefined</p>"},{"location":"js/#valeur-par-d\u00e9faut","title":"Valeur par d\u00e9faut","text":"<pre><code>function name(param1 = \"test\", param2)\n</code></pre>"},{"location":"js/#function-expression","title":"Function Expression","text":"<p>Il est possible de cr\u00e9er une nouvelle fonction au milieu d\u2019une expression, et m\u00eame stocker dans une variable : </p> <pre><code>let sayHi = function() { alert(\"Hello\"); };\n</code></pre> <p>Une function est une valeur, si on utilise la variable sans mettre de paranth\u00e8se \u00e0 la fin, alors c\u2019est le code source de la fonction qui est pass\u00e9 comme valeur.</p> <pre><code>function sayHi() { alert(\"Hello\") }\nlet func = sayHi //la fontion sayHi est copi\u00e9 dans func\nfunc(); //Hello\nsayHi(); //Hello\n</code></pre>"},{"location":"js/#array","title":"Array","text":"<p>Les array en javascript sont des objets. Nous pouvons m\u00e9langer n\u2019importe quel type de donn\u00e9e.</p> <p>Attention, les array ne supporte pas l\u2019utilisation de nom \u00e0 la place d\u2019index (appel\u00e9 hash ou associative array). </p> <p>Si on utilise un nom \u00e0 la place d\u2019un index, alors on ne cr\u00e9\u00e9 pas un array mais un objet.</p> <pre><code>const array_name = [item1, item2, ...];\n\nconst cars = [];\ncars[0]= \"Saab\";\ncars[1]= \"Volvo\";\ncars[2]= \"BMW\";\n\n//Pas consell\u00e9 (lisibilit\u00e9) : utilisation de new\nconst cars = new Array(\"Saab\", \"Volvo\", \"BMW\");\n\n//Convertir un array en string\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\ndocument.getElementById(\"demo\").innerHTML = fruits.toString();\n//Resultat : Banana,Orange,Apple,Mango\n\n//Acc\u00e9der \u00e0 l'entieret\u00e9 de l'array : avec le nom\nconst arr2 = arr1\n\n//Taille d'un array\narray.length\n\n//Trier un array\narray.sort()\n\n//Ajout d'un \u00e9l\u00e9ment\nfruits.push(\"Lemon\");\n//Ajout d'un \u00e9l\u00e9ment par l'index (attention peut cr\u00e9er des trous)\nfruits[fruits.length] = \"Lemon\");\n\n//Looper sur un array\n//via for(...)\nfor (i=0; i &lt; arr.length ;i++) {...}\n//via forEach()\nfunction myFonction(value) { console.log(value); }\narr.forEach(myFonction);\n</code></pre>"},{"location":"js/#loop-et-collection","title":"Loop et collection","text":"<pre><code>//Looper sur une collection\nconst cats = [\"Felix\",\"Catty\",\"Lol\"];\nfor (const cat of cats) {...}\n\n//map() : permet d'appliquer une fonction sur une collection \n//et de cr\u00e9er une nouvelle collection avec les items chang\u00e9s\nconst cats = [\"felix\",\"catty\",\"lol\"];\nconst catsUpper = cats.map(toUpper);\n\n//filter() : permet de filtrer les \u00e9l\u00e9ments d'une collection\n//gr\u00e2ce \u00e0 une fonction et retourner les \u00e9l\u00e9ments qui match\nfonction fCat(cat) { return cat.startwith(\"f\"); }\nconst cats = [\"felix\",\"catty\",\"lol\"] \nconst catsfiltered = cats.filter(fCat);\n</code></pre>"},{"location":"js/#dom","title":"DOM","text":"<p>Le DOM (document object model) est une representation tree-like d\u2019une page web.</p>"},{"location":"js/#cibler-un-node","title":"Cibler un node","text":"<p>Pour cibler un node, on peut utiliser plusieurs m\u00e9thode : </p> <p>Selecteurs du style CSS (.div#container\u2026) ainsiq que des selecteurs relationnel</p> <pre><code>const container = document.querySelector('#container');\nconsole.dir(container.firstElementChild);\n//Selectione le premi\u00e8re enfin de #container\n</code></pre>"},{"location":"js/#m\u00e9thodes-des-node","title":"M\u00e9thodes des node","text":""},{"location":"js/#query-selector","title":"Query Selector","text":"<p>Il est important de not\u00e9 que la m\u00e9thode \u201cquerySelectorAll\u201d ne retourne pas un array mais bien une nodelist. Une nodelist n\u2019a pas toutes les m\u00e9thodes d\u2019un array. Cependant, on peut convertir la nodelist en array avec la fonction <code>Array.from()</code></p> <pre><code>//Selectionner la premi\u00e8re occurance d'un node\n//Retourne une reference du premier match\nelement.querySelector(selector)\n\n//Selectionner toutes les occurances d'un node\n//Retourne une \"nodelist\" de ref\u00e9rence de tous les match\nelement.querySelectorAll(selector)\n</code></pre>"},{"location":"js/#getelementbyid","title":"getElementById()","text":"<p><pre><code>&lt;div id='message'&gt;&lt;/div&gt;\n</code></pre> <pre><code>const ele = document.getElementById('message');\n</code></pre></p>"},{"location":"js/#getelementsbyname","title":"getElementsByName()","text":"<p>Retourne une <code>Node List</code> de tous les \u00e9l\u00e9ments HTML qui partage la m\u00eame valeur pour l'attribut <code>name</code>. <pre><code>&lt;div name=\"boite\"&gt;&lt;/div&gt;\n</code></pre> <pre><code>const ele = document.getElementByName('boite');\n</code></pre></p>"},{"location":"js/#getelementsbytagname","title":"getElementsByTagName()","text":"<p>Est une m\u00e9thode de l'objet <code>document</code> qui retourne une <code>Node List</code> de tous les \u00e9l\u00e9ments HTML qui partage le m\u00eame <code>tag</code>. <pre><code>&lt;div&gt;bla&lt;/div&gt;\n</code></pre> <pre><code>const ele = document=getElementsByTagName('div');\n</code></pre></p>"},{"location":"js/#getelementsbyclassname","title":"getElementsByClassName()","text":"<p>Retourne un objet array-like des \u00e9l\u00e9ments enfant avec le nom de classe sp\u00e9cifi\u00e9. <pre><code>const elements = rootElement.getElementsByClassName(names);\n</code></pre></p>"},{"location":"js/#cr\u00e9ation-dun-\u00e9l\u00e9ment","title":"Cr\u00e9ation d\u2019un \u00e9l\u00e9ment","text":"<pre><code>//document.createElement(tagName, [options])\n//Il est possible d'ajouter des options\nconst div = document.createElement('div');\n</code></pre> <p>Il faut not\u00e9 que cette m\u00e9thode ne place pas l\u2019\u00e9l\u00e9ment dans le DOM (il est cr\u00e9\u00e9 en m\u00e9moire), cela permet notamment de manipuler l\u2019\u00e9lement (ajout de style..) avant de le placer sur la page.</p>"},{"location":"js/#ajout-de-l\u00e9lement-sur-le-dom","title":"Ajout de l\u2019\u00e9lement sur le DOM","text":"<p>Pour l\u2019ajouter sur la page, on peut utiliser les m\u00e9thode suivantes : </p> <pre><code>//Ajout de l'\u00e9l\u00e9ment en tant que derni\u00e8re enfant de parentNode\nparentNode.appendChild(childNode)\n\n//Insert newNode dans parentNode avant referenceNode\nparentNode.insertBefore(newNode, referenceNode)\n</code></pre>"},{"location":"js/#suppression-dun-\u00e9l\u00e9ment","title":"Suppression d\u2019un \u00e9l\u00e9ment","text":"<pre><code>// Supprime child de parentNode sur le DOM et retourne une reference \u00e0 child\nparentNode.removeChild(child)\n</code></pre>"},{"location":"js/#ajout-de-style-inline","title":"Ajout de style inline","text":"<pre><code>//Ajout de la r\u00e8gle de style indiqu\u00e9\ndiv.style.color = 'blue';\n\n//Ajout de plusieurs r\u00e8gles de style\ndiv.style.cssText = 'color: blue; background: white;';\n\n//Ajout de plusieurs r\u00e8gles de style\ndiv.setAttribute('style', 'color: blue; background: white;');\n</code></pre> <p>Les r\u00e8gles css en kebab-cased (avec des tiret) doivent \u00eatre acc\u00e9der par du camelCase ou entre crochet :</p> <pre><code>div.style.background-color // doesn't work - attempts to subtract color from div.style.background\ndiv.style.backgroundColor // accesses the div's background-color style\ndiv.style['background-color'] // also works\ndiv.style.cssText = \"background-color: white;\" // sets the div's background-color by assigning a CSS string\n</code></pre>"},{"location":"js/#editer-des-attributs","title":"Editer des attributs","text":"<pre><code>div.setAttribute('id', 'theDiv');                              \n// if id exists, update it to 'theDiv', else create an id\n// with value \"theDiv\"\n\ndiv.getAttribute('id');                                        \n// returns value of specified attribute, in this case\n// \"theDiv\"\n\ndiv.removeAttribute('id');                                     \n// removes specified attribute\n</code></pre>"},{"location":"js/#travailler-avec-des-classes","title":"Travailler avec des classes","text":"<pre><code>//Ajouter une class \u00e0 un \u00e9l\u00e9ment\ndiv.classList.add('new');\n\n//Supprimer une class d'un \u00e9l\u00e9ment\ndiv.classList.remove('new);\n\n//Supprimer la class new si elle existe et vise versa\n//Cette m\u00e9thode est pr\u00e9f\u00e9r\u00e9e \u00e0 la suppression/ajout\ndiv.classList.toggle('new');\n</code></pre>"},{"location":"js/#ajouter-du-contenu-texte","title":"Ajouter du contenu texte","text":"<pre><code>div.textContent = 'Hello World!'                               \n// Cr\u00e9\u00e9 un node text qui contient \"Hello World!\"\n// et l'insert dans div\n</code></pre>"},{"location":"js/#ajouter-du-contenu-html","title":"Ajouter du contenu HTML","text":"<pre><code>div.innerHTML = '&lt;span&gt;Hello World!&lt;/span&gt;';\n//Rendu de l'HTML dans la div\n</code></pre> <p>Attention : il vaut mieux ajouter du texte via textContent plutot que via l\u2019ajout d\u2019HTML, car cela peut engendrer un risque de s\u00e9curit\u00e9.</p>"},{"location":"js/#d\u00e9layer-le-contenu-du-javascript","title":"D\u00e9layer le contenu du javascript","text":"<p>Pour manipuler le DOM, il faut que le javascript soit appel\u00e9 avant sa cr\u00e9ation. Pour cela, on peut utiliser deux m\u00e9thodes :</p> <ul> <li>Inclure le javascript \u00e0 la fin du fichier html</li> <li>Ajouter le keyword <code>defer</code>  dans le tag script afin de la lancer apr\u00e8s le parsing de l\u2019HTML</li> </ul> <pre><code>&lt;head&gt;\n    &lt;script src=\"js-file.js\" defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>"},{"location":"js/#events","title":"Events","text":"<p>Les Events sont des actions qui sont r\u00e9alis\u00e9es sur notre page tel que un clic-souris ou un keypress, et utilise JavaScript pour que notre page web \u00e9coute et r\u00e9agit \u00e0 ses evenements.</p> <p>Il existe trois fa\u00e7on primaire d\u2019ajouter un Events : </p> <ul> <li>M\u00e9thode 1 : Sp\u00e9cifi\u00e9 l\u2019attribue de function directement dans le HTML</li> <li>Methode 2 : Sp\u00e9cifi\u00e9 un attribue on[eventType] (exemple onclick, onmouse, ect..) sur le node DOM avec Javascript</li> <li>M\u00e9thode 3 [pr\u00e9f\u00e9r\u00e9] : Attach\u00e9 un <code>event listener</code>  sur le node DOM dans le JavaScript.</li> </ul> <p>M\u00e9thode 1 </p> <p>Pas id\u00e9al car ajoute du javascript dans notre HTML</p> <pre><code>&lt;button onclick=\"alert('Hello World')\"&gt;Click Me&lt;/button&gt;\n</code></pre> <p>M\u00e9thode 2</p> <pre><code>&lt;!-- The HTML File--&gt;\n&lt;button id=\"btn\"&gt;Click Me&lt;/button&gt;\n</code></pre> <pre><code>// The Javascript File\nconst btn = document.querySelector('#btn\");\nbtn.onclick = () =&gt; alert(\"Hello World\");\n</code></pre> <p>M\u00e9thode 3 </p> <p>Cette m\u00e9thode est plus fexible et puissante, on peut ajouter plusieurs event listener \u00e0 un m\u00eame node.</p> <pre><code>&lt;!-- The HTML File--&gt;\n&lt;button id=\"btn\"&gt;Click Me&lt;/button&gt;\n</code></pre> <pre><code>// The Javascript File\nconst btn = document.querySelector('#btn\");\nbtn.addEventListener('click', () =&gt; {\n    alert(\"Hello World\");\n});\n</code></pre> <p>Remarque : </p> <ul> <li>Des fonctions nomm\u00e9s peuvent \u00eatre utilis\u00e9 \u00e0 la place des arrows function. Cela permet d\u2019am\u00e9liorer la lisibilit\u00e9 du code.</li> <li> <p>Sur les 3 m\u00e9thodes nous pouvons acc\u00e9der \u00e0 plus d\u2019information sur l\u2019event en passant un param\u00e8tre \u00e0 la fonction que nous appelons (callback function) :</p> <p><code>btn.addEventListener(\u2019click\u2019,function (e) { console.log(e);});</code></p> <p>le <code>e</code> est un objet qui reference l\u2019event lui m\u00eame, il contient des m\u00e9thodes qui permet par exemple de d\u00e9terminer quel clic a \u00e9t\u00e9 appuy\u00e9.</p> <pre><code>btn.addEventListener(\u2019click\u2019,function (e) { \n    console.log(e.target); //e.target se refere \u00e0 l'\u00e9lement cliqu\u00e9\n    e.target.style.background = 'blue';\n}\n</code></pre> </li> </ul>"},{"location":"js/#attacher-un-event-listener-\u00e0-un-groupe-de-node","title":"Attacher un event listener \u00e0 un groupe de node","text":"<p>Pour \u00e7a on selectionne plusieurs node avec <code>document.querySelectorAll(\u2019element\u2019)</code> coupl\u00e9 avec <code>nodelist.forEach()</code></p> <pre><code>&lt;div id=container&gt;\n    &lt;button id=\"1\"&gt;Click Me&lt;/button&gt;\n    &lt;button id=\"2\"&gt;Click Me&lt;/button&gt;\n    &lt;button id=\"3\"&gt;Click Me&lt;/button&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>//buttons est une node list, Cela agit presque comme un array\nconst buttons = querySelectAll('button');\n\n//On utilise la m\u00e9thode forEach pour it\u00e9rer au travers de buttons\nbuttons.forEach((button) =&gt; {\n    //Pour chaque button on ajoute le listener 'click'\n    button.addEventListener('click', () =&gt; {\n        alert(button.id);\n    });\n});\n</code></pre>"},{"location":"js/#liste-des-events-utiles","title":"Liste des Events utiles","text":"<ul> <li>click</li> <li>dblclick</li> <li>keydown</li> <li>keyup</li> </ul>"},{"location":"test/","title":"Test Link","text":"<p>Original</p> <p><pre><code>* [tutorial](&lt;./tutorial.md&gt;)\n* [tutorial#usage\u7528\u6cd5](&lt;./tutorial.md#usage\u7528\u6cd5&gt;)\n* [tutorial#demo](&lt;./tutorial.md#demo&gt;)\n* [#\u4e2d\u6587\u6807\u9898](&lt;#\u4e2d\u6587\u6807\u9898&gt;)\n* [\u6587\u7ae0#\u6807\u9898](&lt;foo-tab/\u6587\u7ae0.md#\u6807\u9898&gt;)\n* [\u522b\u540dAlias](&lt;foo-tab/\u6587\u7ae0.md#\u6807\u9898&gt;)\n</code></pre> Convert</p> <ul> <li>tutorial</li> <li>tutorial#usage\u7528\u6cd5</li> <li>tutorial#demo</li> <li>#\u4e2d\u6587\u6807\u9898</li> <li>\u6587\u7ae0#\u6807\u9898</li> <li>\u522b\u540dAlias</li> </ul>"},{"location":"test/#\u4e2d\u6587\u6807\u9898","title":"\u4e2d\u6587\u6807\u9898","text":"<p>Content</p>"},{"location":"tutorial/","title":"Tutorial\u6559\u7a0b","text":"<ul> <li>Share your foam/obsidian/markdown notes in a simple and intuitive way ! Support [[roamlike link]] </li> <li>You can share your foam/obsidian note using this template</li> <li>\u7528\u7b80\u5355\u548c\u76f4\u89c2\u7684\u65b9\u5f0f\u5206\u4eab\u4f60\u7684foam/obsidian/markdown\u7b14\u8bb0\uff01\u652f\u6301[[\u94fe\u63a5]]\u89e3\u6790\uff0cpush\u81ea\u52a8\u90e8\u7f72\u9875\u9762\uff0c\u4f7f\u7528\u8fd9\u4e2a\u535a\u5ba2\u6a21\u677f\u5373\u53ef\u3002</li> </ul>"},{"location":"tutorial/#demo","title":"Demo","text":"<ul> <li>github page</li> <li>gitee page\u56fd\u5185\u8bbf\u95ee\u66f4\u5feb</li> </ul>"},{"location":"tutorial/#support-syntax\u652f\u6301\u7684\u8bed\u6cd5","title":"Support syntax\u652f\u6301\u7684\u8bed\u6cd5","text":"origin\u539f\u59cb convert\u8f6c\u6362\u540e <code>[Git Flow](git_flow.md)</code> <code>[Git Flow](../software/git_flow.md)</code> <code>[[Git Flow]]</code> <code>[Git Flow](../software/git_flow.md)</code> <code>![[image.png]]</code> <code>![image.png](../image/imag.png)</code> <code>[#Heading identifiers](&lt;#heading-identifiers&gt;)</code> <code>[Heading identifiers in HTML](#heading-identifiers-in-html)</code> <code>[[Git Flow#Heading]]</code> <code>[Git Flow](../software/git_flow.md#heading)</code>"},{"location":"tutorial/#usage\u7528\u6cd5","title":"Usage\u7528\u6cd5","text":"\u4e2d\u6587 English"},{"location":"tutorial/#\u4f7f\u7528\u65b9\u6cd5\u90e8\u7f72\u5230github-page\u751f\u6210\u535a\u5ba2\u7f51\u7ad9","title":"\u4f7f\u7528\u65b9\u6cd5\uff1a\u90e8\u7f72\u5230github page\u751f\u6210\u535a\u5ba2\u7f51\u7ad9","text":"<ol> <li>\u590d\u5236Fork\u6216\u8005\u4e0b\u8f7d\u8fd9\u4e2a\u4ed3\u5e93</li> <li>\u5c06\u4f60\u7684\u6587\u6863\u6dfb\u52a0\u5230<code>docs</code>\u4e0b\u9762\uff08\u539f\u6765\u7684\u6587\u4ef6\u53ef\u4ee5\u5168\u90e8\u5220\u6389\uff09\uff0c\u5728<code>docs</code>\u5413\u6dfb\u52a0\u4e00\u4e2a<code>index.md</code>\u4f5c\u4e3a\u7f51\u7ad9\u4e3b\u9875</li> <li>\u8fdb\u5165<code>mkdocs.yml</code>\u4fee\u6539<code>site_name</code>\u4e3a\u4f60\u7684\u7f51\u7ad9\u540d\u79f0\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u4f60\u7f51\u7ad9\u7684\u914d\u7f6e\uff0c\u5177\u4f53\u914d\u7f6e\u6559\u7a0b\u89c1\uff1a<ul> <li>mkdocs-material</li> <li>mkdocs</li> </ul> </li> <li>push\u63d0\u4ea4\u4fee\u6539\u5230github\uff0c\u7b49\u4e00\u5c0f\u4f1a\uff0c\u5c31\u53ef\u4ee5\u5230<code>\u4f60\u7684github\u7528\u6237\u540d.github.io/\u4f60\u7684\u4ed3\u5e93\u540d/</code>\u4e0b\u8bbf\u95ee\u535a\u5ba2\u4e86\uff0c\u6211\u7684\u662f<code>jackiexiao.github.io/blog/</code></li> <li>\u5927\u529f\u544a\u6210\uff01</li> </ol> <p>\u4e4b\u6240\u4ee5git push\u5c31\u53ef\u4ee5\u81ea\u52a8\u90e8\u7f72\u7f51\u9875\uff0c\u751f\u6210\u535a\u5ba2\uff0c\u662f\u56e0\u4e3agithub action\u5728\u8d77\u4f5c\u7528\uff01\u611f\u5174\u8da3\u53ef\u4ee5\u81ea\u5df1\u641c\u7d22\u4e00\u4e0b\u3002</p>"},{"location":"tutorial/#\u672c\u5730\u90e8\u7f72","title":"\u672c\u5730\u90e8\u7f72","text":"<p>\u7ecf\u5e38\u6027\u7684\uff0c\u6211\u4eec\u9700\u8981\u672c\u5730\u90e8\u7f72\u6587\u6863\uff0c\u6765\u8fdb\u884c\u9891\u7e41\u7684\u4fee\u6539\u548c\u9884\u89c8\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8fdb\u5165\u4f60\u7684\u6587\u4ef6\u5939\uff08\u4ed3\u5e93\u672c\u5730\u5730\u5740\uff0c\u4e5f\u5c31\u662f<code>docs</code>\u6587\u4ef6\u5939\u7684\u4e0a\u4e00\u7ea7\uff09\uff0c\u4f60\u7684python\u9700\u89813.6\u4ee5\u4e0a <pre><code>pip install mkdocs mkdocs-material mkdocs-roamlinks-plugin\nmkdocs serve \n</code></pre> \u7136\u540e\u8bbf\u95ee<code>http://127.0.0.1:8000/</code>\u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"tutorial/#\u540c\u6b65\u53d1\u5e03\u5230gitee-page\u52a0\u901f\u56fd\u5185\u8bbf\u95ee","title":"\u540c\u6b65\u53d1\u5e03\u5230Gitee page\u52a0\u901f\u56fd\u5185\u8bbf\u95ee","text":"<p>\u6b65\u9aa4\u5f88\u7b80\u5355\uff0c\u6bd4\u5982\u8fd9\u4e2a\u535a\u5ba2\uff0c\u5728Gitee\u7684\u9996\u9875\u4e0b\u65b0\u5efa\u4ed3\u5e93\uff0c\u5728\u9875\u9762\u4e0b\u65b9\u9009\u62e9<code>\u5bfc\u5165\u5df2\u6709\u4ed3\u5e93</code>, \u586b\u5199\u4f60\u7684github\u4ed3\u5e93\u5730\u5740\uff0c\u7136\u540e\u70b9\u51fb<code>\u670d\u52a1</code>-&gt;<code>Gitee Page</code>-&gt;<code>\u90e8\u7f72\u5206\u652f</code>-&gt;\u9009\u62e9<code>gh-pages</code>\uff0c\u70b9\u51fb<code>\u66f4\u65b0</code>\u5c31\u5b8c\u6210\u5566\uff01\u51e0\u79d2\u540e\u5237\u65b0\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u81ea\u5df1gitee apge\u7684\u94fe\u63a5\u4e86\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u66f4\u65b0Gitee page\uff0c\u4f60\u9700\u89813\u4e2a\u6b65\u9aa4</p> <ol> <li>\u66f4\u65b0\u4f60\u7684github\u4ed3\u5e93</li> <li>\u5728Gitee\u4e2d\u624b\u52a8\u70b9\u51fb\u540c\u6b65github</li> <li>\u6309\u524d\u9762\u7684\u6b65\u9aa4\uff0c\u518d\u6b21\u90e8\u7f72Gitee Page </li> </ol>"},{"location":"tutorial/#usagedeploy-to-github-page","title":"Usage\uff1aDeploy to github page","text":"<ol> <li>fork this repository </li> <li>add your documents to <code>docs</code> , <code>docs/index.md</code> is the main page of the website</li> <li>open <code>mkdocs.yml</code>, modify <code>site_name</code> to your website name, this file is the setting of website, visit link below to get more information<ul> <li>mkdocs-material</li> <li>mkdocs</li> </ul> </li> <li>push to github, wait a moment, then visit <code>http://&lt;your-github-username.github.io/&lt;your-repo&gt;</code>, for example:<code>jackiexiao.github.io/blog/</code></li> <li>Done! That's all! Have fun!</li> </ol> <p>Thx to <code>Github Action</code>, it make deploy a blog so easy, all you need todo is modify and push your file</p>"},{"location":"tutorial/#deploy-locally","title":"Deploy Locally","text":"<p>The simplest way: Enter your local repo directory, make sure your python &gt; 3.6 <pre><code>pip install mkdocs mkdocs-material mkdocs-roamlinks-plugin\nmkdocs serve \n</code></pre> Then visit <code>http://127.0.0.1:8000/</code></p>"},{"location":"foo-tab/example/","title":"An example Page","text":"<ul> <li>tutorial</li> <li>index</li> </ul>"},{"location":"foo-tab/%E6%96%87%E7%AB%A0/","title":"\u6587\u7ae0","text":"<p>content</p>"},{"location":"foo-tab/%E6%96%87%E7%AB%A0/#\u6807\u9898","title":"\u6807\u9898","text":"<p>content</p> <ul> <li>tutorial</li> <li>tutorial#usage\u7528\u6cd5</li> <li>tutorial#demo</li> <li>#\u4e2d\u6587\u6807\u9898</li> <li>\u6587\u7ae0#\u6807\u9898</li> <li>\u522b\u540d</li> </ul> <pre><code>[tutorial](&lt;../tutorial.md&gt;)\n[tutorial#usage\u7528\u6cd5](&lt;../tutorial.md#usage\u7528\u6cd5&gt;)\n[tutorial#demo](&lt;../tutorial.md#demo&gt;)\n* [#\u4e2d\u6587\u6807\u9898](&lt;#\u4e2d\u6587\u6807\u9898&gt;)\n* [\u6587\u7ae0#\u6807\u9898](&lt;./\u6587\u7ae0.md#\u6807\u9898&gt;)\n* [\u522b\u540d](&lt;./\u6587\u7ae0.md#\u6807\u9898&gt;)\n</code></pre>"}]}